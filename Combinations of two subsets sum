class Solution:
    def generate(self,ind,curr_subset, candidates, ans,target):
        if(target==0):
            ans.append(curr_subset.copy())
            return
        if(target<0):
            return
        if(ind==len(candidates)):
            return
        curr_subset.append(candidates[ind])
        self.generate(ind,curr_subset,candidates,ans,target-candidates[ind])
        curr_subset.pop()
        self.generate(ind+1,curr_subset,candidates,ans,target)
    def combinationSum(self, candidates: list[int], target: int) -> list[list[int]]:
        ind=0
        curr_subset=[]
        ans=[]
        self.generate(ind,curr_subset, candidates, ans,target)
        return ans
    
candidates=list(map(int,input().split()))
target=int(input())
sol=Solution()
print(sol.combinationSum(candidates,target))
